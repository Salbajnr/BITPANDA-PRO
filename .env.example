# Application Environment
NODE_ENV="development"  # development, production, test

# Database Configuration
# Format: postgresql://user:password@host:port/database
DATABASE_URL="postgresql://user:password@localhost:5432/dbname"

# For backward compatibility (optional, DATABASE_URL is preferred)
PGHOST="localhost"
PGUSER="postgres"
PGPASSWORD="your-secure-password"
PGDATABASE="dbname"
PGPORT="5432"

# Security Secrets (generate strong random strings for these)
JWT_SECRET="generate-a-secure-random-string-min-32-chars"
SESSION_SECRET="generate-a-secure-random-string-min-32-chars"
SESSION_SECRET_REFRESH="generate-a-different-secure-random-string-min-32-chars"
CSRF_TOKEN="generate-a-secure-random-string"

# API Keys (optional, only if you need these services)
# COINGECKO_API_KEY="your-coingecko-api-key"
# SENDERGRID_API_KEY="your-sendgrid-api-key"
# METALS_API_KEY="your-metals-api-key"

# Server Configuration
PORT=3000
HOST=0.0.0.0

# SSL Configuration (for production)
# SSL_CERT_PATH="/path/to/cert.pem"
# SSL_KEY_PATH="/path/to/key.pem"

# Rate Limiting
# RATE_LIMIT_WINDOW_MS=900000  # 15 minutes
# RATE_LIMIT_MAX_REQUESTS=100  # Max requests per window per IP

# CORS Configuration
# CORS_ORIGIN="https://your-frontend-domain.com"
# CORS_METHODS="GET,POST,PUT,DELETE,OPTIONS"
# CORS_ALLOWED_HEADERS="Content-Type,Authorization"

# Logging
# LOG_LEVEL="info"  # error, warn, info, debug
# LOG_FORMAT="json"  # json, pretty, or combined